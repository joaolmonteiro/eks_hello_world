# .github/workflows/deploy.yml
#
name: Deploy Hello World to EKS

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build -t ghcr.io/${{ github.repository }}/hello-world:latest .
        docker push ghcr.io/${{ github.repository }}/hello-world:latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name education-eks-VxAaQBxE --region eu-west-1

    - name: Delete configMap
      run: |
        kubectl delete configmap ingress-config

    - name: Create configMap
      run: |
        kubectl create configmap ingress-config --from-file=config.json

    - name: Delete Deployment1
      run: | 
         kubectl delete deployment frontend1

    - name: Create Deployment1
      run: | 
         kubectl apply -f k8s/frontend-deployment1.yaml

    - name: Delete Deployment2
      run: | 
         kubectl delete deployment frontend2

    - name: Create Deployment2
      run: | 
         kubectl apply -f k8s/frontend-deployment2.yaml

    - name: Deploy SERVICE to EKS
      run: |
        kubectl apply -f k8s/frontend-service1.yaml

    - name: Deploy SERVICE to EKS
      run: |
        kubectl apply -f k8s/frontend-service2.yaml

    - name: Deploy Ingress
      run: |
        kubectl apply -f k8s/fanout-ingress.yaml


